<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mappers.DepartmentMapper">

    <!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
    <resultMap id="MyDept" type="com.mybatis.beans.Department">
        <id column="dept_id" property="id"></id>
        <result column="department_name" property="departmentName"></result>
        <!--collection 定义关联集合类型的属性封装规则-->
        <collection property="emps" ofType="com.mybatis.beans.Employee">
            <id column="id" property="id"></id>
            <result column="last_name" property="lastName"></result>
            <result column="email" property="email"></result>
            <result column="gender" property="gender"></result>
        </collection>
    </resultMap>
    <!--
     Department getDeptById(Integer id);
    -->

    <select id="getDeptById" resultType="com.mybatis.beans.Department">
        SELECT id,dept_name departmentname FROM tb_dept WHERE id = #{id}
    </select>

    <!--
         Department getDeptByIdPlus(Integer id);
    -->
    <select id="getDeptByIdPlus" resultType="com.mybatis.beans.Department">
    SELECT d.id did,d.dept_name dept_name,
        e.id eid,e.last_name last_name,e.email email,e.gender gender
    FROM tb_dept d
    LEFT JOIN employee e
    ON d.id=e.d_id
    WHERE d.id=#{id}select>
    </select>

    <!--
        分段查询
    -->
    <resultMap type="com.mybatis.beans.Department" id="MyDeptStep">
        <id column="id" property="id"></id>
        <result column="department_name" property="departmentName"></result>
        <collection property="emps" select="com.mybatis.mappers.EmployeeMapperPlus.getEmployeeByDeptId"
                    column="{deptId=id}" fetchType="lazy">
        </collection>
    </resultMap>
    <!--
        Department getDeptByIdStep(Integer id);
        分段查询
    -->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
    select id,department_name from tb_dept where id=#{id}
    </select>
    <!-- 扩展：多列的值传递过去：
			将多列的值封装map传递；
			column="{key1=column1,key2=column2}"
		fetchType="lazy"：表示使用延迟加载；
				- lazy：延迟
				- eager：立即
	 -->
</mapper>